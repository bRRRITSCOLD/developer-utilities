/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutStrongholdIndexImport } from './routes/_layout/stronghold/index'
import { Route as LayoutIdentityManagementIndexImport } from './routes/_layout/identity-management/index'
import { Route as LayoutStrongholdSettingsImport } from './routes/_layout/stronghold/settings'
import { Route as LayoutIdentityManagementSettingsImport } from './routes/_layout/identity-management/settings'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutStrongholdIndexRoute = LayoutStrongholdIndexImport.update({
  id: '/stronghold/',
  path: '/stronghold/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIdentityManagementIndexRoute =
  LayoutIdentityManagementIndexImport.update({
    id: '/identity-management/',
    path: '/identity-management/',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutStrongholdSettingsRoute = LayoutStrongholdSettingsImport.update({
  id: '/stronghold/settings',
  path: '/stronghold/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutIdentityManagementSettingsRoute =
  LayoutIdentityManagementSettingsImport.update({
    id: '/identity-management/settings',
    path: '/identity-management/settings',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/identity-management/settings': {
      id: '/_layout/identity-management/settings'
      path: '/identity-management/settings'
      fullPath: '/identity-management/settings'
      preLoaderRoute: typeof LayoutIdentityManagementSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/stronghold/settings': {
      id: '/_layout/stronghold/settings'
      path: '/stronghold/settings'
      fullPath: '/stronghold/settings'
      preLoaderRoute: typeof LayoutStrongholdSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/identity-management/': {
      id: '/_layout/identity-management/'
      path: '/identity-management'
      fullPath: '/identity-management'
      preLoaderRoute: typeof LayoutIdentityManagementIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/stronghold/': {
      id: '/_layout/stronghold/'
      path: '/stronghold'
      fullPath: '/stronghold'
      preLoaderRoute: typeof LayoutStrongholdIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutIdentityManagementSettingsRoute: typeof LayoutIdentityManagementSettingsRoute
  LayoutStrongholdSettingsRoute: typeof LayoutStrongholdSettingsRoute
  LayoutIdentityManagementIndexRoute: typeof LayoutIdentityManagementIndexRoute
  LayoutStrongholdIndexRoute: typeof LayoutStrongholdIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutIdentityManagementSettingsRoute: LayoutIdentityManagementSettingsRoute,
  LayoutStrongholdSettingsRoute: LayoutStrongholdSettingsRoute,
  LayoutIdentityManagementIndexRoute: LayoutIdentityManagementIndexRoute,
  LayoutStrongholdIndexRoute: LayoutStrongholdIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/identity-management/settings': typeof LayoutIdentityManagementSettingsRoute
  '/stronghold/settings': typeof LayoutStrongholdSettingsRoute
  '/identity-management': typeof LayoutIdentityManagementIndexRoute
  '/stronghold': typeof LayoutStrongholdIndexRoute
}

export interface FileRoutesByTo {
  '/settings': typeof LayoutSettingsRoute
  '/': typeof LayoutIndexRoute
  '/identity-management/settings': typeof LayoutIdentityManagementSettingsRoute
  '/stronghold/settings': typeof LayoutStrongholdSettingsRoute
  '/identity-management': typeof LayoutIdentityManagementIndexRoute
  '/stronghold': typeof LayoutStrongholdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/identity-management/settings': typeof LayoutIdentityManagementSettingsRoute
  '/_layout/stronghold/settings': typeof LayoutStrongholdSettingsRoute
  '/_layout/identity-management/': typeof LayoutIdentityManagementIndexRoute
  '/_layout/stronghold/': typeof LayoutStrongholdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/'
    | '/identity-management/settings'
    | '/stronghold/settings'
    | '/identity-management'
    | '/stronghold'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/settings'
    | '/'
    | '/identity-management/settings'
    | '/stronghold/settings'
    | '/identity-management'
    | '/stronghold'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/settings'
    | '/_layout/'
    | '/_layout/identity-management/settings'
    | '/_layout/stronghold/settings'
    | '/_layout/identity-management/'
    | '/_layout/stronghold/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/settings",
        "/_layout/",
        "/_layout/identity-management/settings",
        "/_layout/stronghold/settings",
        "/_layout/identity-management/",
        "/_layout/stronghold/"
      ]
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/identity-management/settings": {
      "filePath": "_layout/identity-management/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/stronghold/settings": {
      "filePath": "_layout/stronghold/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/identity-management/": {
      "filePath": "_layout/identity-management/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/stronghold/": {
      "filePath": "_layout/stronghold/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
